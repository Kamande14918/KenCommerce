{"ast":null,"code":"import axios from 'axios';\nconst API = 'http://localhost:5000/api/products';\n\n// Create product (with images)\nexport const createProduct = async (productData, token) => {\n  const formData = new FormData();\n  Object.keys(productData).forEach(key => {\n    if (key === 'images' && Array.isArray(productData.images)) {\n      productData.images.forEach(img => formData.append('images', img));\n    } else {\n      formData.append(key, productData[key]);\n    }\n  });\n  return axios.post(API, formData, {\n    headers: {\n      'Authorization': `Bearer ${token}`,\n      'Content-Type': 'multipart/form-data'\n    }\n  });\n};\n\n// Fetch all products\nexport const fetchProducts = async () => {\n  try {\n    const response = await axios.get(API);\n    return response.data;\n  } catch (error) {\n    throw new Error('Error fetching products: ' + error.message);\n  }\n};\n\n// Fetch product details by ID\nexport const fetchProductById = async productId => {\n  try {\n    const response = await axios.get(`${API}/${productId}`);\n    return response.data;\n  } catch (error) {\n    throw new Error('Error fetching product details: ' + error.message);\n  }\n};\n\n// Search products by query\nexport const searchProducts = async query => {\n  try {\n    const response = await axios.get(`${API}/search`, {\n      params: {\n        query\n      }\n    });\n    return response.data;\n  } catch (error) {\n    throw new Error('Error searching products: ' + error.message);\n  }\n};\n\n// Update an existing product\nexport const updateProduct = async (productId, productData) => {\n  try {\n    const response = await axios.put(`${API}/${productId}`, productData);\n    return response.data;\n  } catch (error) {\n    throw new Error('Error updating product: ' + error.message);\n  }\n};\n\n// Delete a product\nexport const deleteProduct = async productId => {\n  try {\n    const response = await axios.delete(`${API}/${productId}`);\n    return response.data;\n  } catch (error) {\n    throw new Error('Error deleting product: ' + error.message);\n  }\n};\n\n// Other product endpoints...\nexport const listProductsByShop = shopId => axios.get(`${API}/shop/${shopId}`);\nexport const listLatestProducts = () => axios.get(`${API}/latest`);\nexport const listRelatedProducts = id => axios.get(`${API}/related/${id}`);\nexport const listCategories = () => axios.get(`${API}/categories`);\nexport const removeProduct = (id, token) => axios.delete(`${API}/${id}`, {\n  headers: {\n    'Authorization': `Bearer ${token}`\n  }\n});\nexport const decreaseQuantity = (productId, amount, token) => axios.post(`${API}/decrease`, {\n  productId,\n  amount\n}, {\n  headers: {\n    'Authorization': `Bearer ${token}`\n  }\n});\nexport const increaseQuantity = (productId, amount, token) => axios.post(`${API}/increase`, {\n  productId,\n  amount\n}, {\n  headers: {\n    'Authorization': `Bearer ${token}`\n  }\n});","map":{"version":3,"names":["axios","API","createProduct","productData","token","formData","FormData","Object","keys","forEach","key","Array","isArray","images","img","append","post","headers","fetchProducts","response","get","data","error","Error","message","fetchProductById","productId","searchProducts","query","params","updateProduct","put","deleteProduct","delete","listProductsByShop","shopId","listLatestProducts","listRelatedProducts","id","listCategories","removeProduct","decreaseQuantity","amount","increaseQuantity"],"sources":["C:/Users/user/Desktop/kamau/KenCommerce MERN/client/src/api/products.js"],"sourcesContent":["import axios from 'axios';\n\nconst API = 'http://localhost:5000/api/products';\n\n// Create product (with images)\nexport const createProduct = async (productData, token) => {\n  const formData = new FormData();\n  Object.keys(productData).forEach(key => {\n    if (key === 'images' && Array.isArray(productData.images)) {\n      productData.images.forEach(img => formData.append('images', img));\n    } else {\n      formData.append(key, productData[key]);\n    }\n  });\n  return axios.post(API, formData, {\n    headers: {\n      'Authorization': `Bearer ${token}`,\n      'Content-Type': 'multipart/form-data'\n    }\n  });\n};\n\n// Fetch all products\nexport const fetchProducts = async () => {\n    try {\n        const response = await axios.get(API);\n        return response.data;\n    } catch (error) {\n        throw new Error('Error fetching products: ' + error.message);\n    }\n};\n\n// Fetch product details by ID\nexport const fetchProductById = async (productId) => {\n    try {\n        const response = await axios.get(`${API}/${productId}`);\n        return response.data;\n    } catch (error) {\n        throw new Error('Error fetching product details: ' + error.message);\n    }\n};\n\n// Search products by query\nexport const searchProducts = async (query) => {\n    try {\n        const response = await axios.get(`${API}/search`, { params: { query } });\n        return response.data;\n    } catch (error) {\n        throw new Error('Error searching products: ' + error.message);\n    }\n};\n\n// Update an existing product\nexport const updateProduct = async (productId, productData) => {\n    try {\n        const response = await axios.put(`${API}/${productId}`, productData);\n        return response.data;\n    } catch (error) {\n        throw new Error('Error updating product: ' + error.message);\n    }\n};\n\n// Delete a product\nexport const deleteProduct = async (productId) => {\n    try {\n        const response = await axios.delete(`${API}/${productId}`);\n        return response.data;\n    } catch (error) {\n        throw new Error('Error deleting product: ' + error.message);\n    }\n};\n\n// Other product endpoints...\nexport const listProductsByShop = (shopId) => axios.get(`${API}/shop/${shopId}`);\nexport const listLatestProducts = () => axios.get(`${API}/latest`);\nexport const listRelatedProducts = (id) => axios.get(`${API}/related/${id}`);\nexport const listCategories = () => axios.get(`${API}/categories`);\nexport const removeProduct = (id, token) =>\n  axios.delete(`${API}/${id}`, { headers: { 'Authorization': `Bearer ${token}` } });\nexport const decreaseQuantity = (productId, amount, token) =>\n  axios.post(`${API}/decrease`, { productId, amount }, { headers: { 'Authorization': `Bearer ${token}` } });\nexport const increaseQuantity = (productId, amount, token) =>\n  axios.post(`${API}/increase`, { productId, amount }, { headers: { 'Authorization': `Bearer ${token}` } });"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}