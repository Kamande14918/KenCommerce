{"ast":null,"code":"import axios from 'axios';\nconst API_URL = 'http://localhost:5000/api/products';\n\n// Fetch all products\nexport const fetchProducts = async () => {\n  try {\n    const response = await axios.get(API_URL);\n    return response.data;\n  } catch (error) {\n    throw new Error('Error fetching products: ' + error.message);\n  }\n};\n\n// Fetch product details by ID\nexport const fetchProductById = async productId => {\n  try {\n    const response = await axios.get(`${API_URL}/${productId}`);\n    return response.data;\n  } catch (error) {\n    throw new Error('Error fetching product details: ' + error.message);\n  }\n};\n\n// Search products by query\nexport const searchProducts = async query => {\n  try {\n    const response = await axios.get(`${API_URL}/search`, {\n      params: {\n        query\n      }\n    });\n    return response.data;\n  } catch (error) {\n    throw new Error('Error searching products: ' + error.message);\n  }\n};\n\n// Create a new product (for sellers)\nexport const createProduct = async productData => {\n  try {\n    const response = await axios.post(API_URL, productData);\n    return response.data;\n  } catch (error) {\n    throw new Error('Error creating product: ' + error.message);\n  }\n};\n\n// Update an existing product\nexport const updateProduct = async (productId, productData) => {\n  try {\n    const response = await axios.put(`${API_URL}/${productId}`, productData);\n    return response.data;\n  } catch (error) {\n    throw new Error('Error updating product: ' + error.message);\n  }\n};\n\n// Delete a product\nexport const deleteProduct = async productId => {\n  try {\n    const response = await axios.delete(`${API_URL}/${productId}`);\n    return response.data;\n  } catch (error) {\n    throw new Error('Error deleting product: ' + error.message);\n  }\n};","map":{"version":3,"names":["axios","API_URL","fetchProducts","response","get","data","error","Error","message","fetchProductById","productId","searchProducts","query","params","createProduct","productData","post","updateProduct","put","deleteProduct","delete"],"sources":["C:/Users/user/Desktop/kamau/KenCommerce MERN/client/src/api/products.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_URL = 'http://localhost:5000/api/products';\n\n// Fetch all products\nexport const fetchProducts = async () => {\n    try {\n        const response = await axios.get(API_URL);\n        return response.data;\n    } catch (error) {\n        throw new Error('Error fetching products: ' + error.message);\n    }\n};\n\n// Fetch product details by ID\nexport const fetchProductById = async (productId) => {\n    try {\n        const response = await axios.get(`${API_URL}/${productId}`);\n        return response.data;\n    } catch (error) {\n        throw new Error('Error fetching product details: ' + error.message);\n    }\n};\n\n// Search products by query\nexport const searchProducts = async (query) => {\n    try {\n        const response = await axios.get(`${API_URL}/search`, { params: { query } });\n        return response.data;\n    } catch (error) {\n        throw new Error('Error searching products: ' + error.message);\n    }\n};\n\n// Create a new product (for sellers)\nexport const createProduct = async (productData) => {\n    try {\n        const response = await axios.post(API_URL, productData);\n        return response.data;\n    } catch (error) {\n        throw new Error('Error creating product: ' + error.message);\n    }\n};\n\n// Update an existing product\nexport const updateProduct = async (productId, productData) => {\n    try {\n        const response = await axios.put(`${API_URL}/${productId}`, productData);\n        return response.data;\n    } catch (error) {\n        throw new Error('Error updating product: ' + error.message);\n    }\n};\n\n// Delete a product\nexport const deleteProduct = async (productId) => {\n    try {\n        const response = await axios.delete(`${API_URL}/${productId}`);\n        return response.data;\n    } catch (error) {\n        throw new Error('Error deleting product: ' + error.message);\n    }\n};"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAG,oCAAoC;;AAEpD;AACA,OAAO,MAAMC,aAAa,GAAG,MAAAA,CAAA,KAAY;EACrC,IAAI;IACA,MAAMC,QAAQ,GAAG,MAAMH,KAAK,CAACI,GAAG,CAACH,OAAO,CAAC;IACzC,OAAOE,QAAQ,CAACE,IAAI;EACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZ,MAAM,IAAIC,KAAK,CAAC,2BAA2B,GAAGD,KAAK,CAACE,OAAO,CAAC;EAChE;AACJ,CAAC;;AAED;AACA,OAAO,MAAMC,gBAAgB,GAAG,MAAOC,SAAS,IAAK;EACjD,IAAI;IACA,MAAMP,QAAQ,GAAG,MAAMH,KAAK,CAACI,GAAG,CAAC,GAAGH,OAAO,IAAIS,SAAS,EAAE,CAAC;IAC3D,OAAOP,QAAQ,CAACE,IAAI;EACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZ,MAAM,IAAIC,KAAK,CAAC,kCAAkC,GAAGD,KAAK,CAACE,OAAO,CAAC;EACvE;AACJ,CAAC;;AAED;AACA,OAAO,MAAMG,cAAc,GAAG,MAAOC,KAAK,IAAK;EAC3C,IAAI;IACA,MAAMT,QAAQ,GAAG,MAAMH,KAAK,CAACI,GAAG,CAAC,GAAGH,OAAO,SAAS,EAAE;MAAEY,MAAM,EAAE;QAAED;MAAM;IAAE,CAAC,CAAC;IAC5E,OAAOT,QAAQ,CAACE,IAAI;EACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZ,MAAM,IAAIC,KAAK,CAAC,4BAA4B,GAAGD,KAAK,CAACE,OAAO,CAAC;EACjE;AACJ,CAAC;;AAED;AACA,OAAO,MAAMM,aAAa,GAAG,MAAOC,WAAW,IAAK;EAChD,IAAI;IACA,MAAMZ,QAAQ,GAAG,MAAMH,KAAK,CAACgB,IAAI,CAACf,OAAO,EAAEc,WAAW,CAAC;IACvD,OAAOZ,QAAQ,CAACE,IAAI;EACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZ,MAAM,IAAIC,KAAK,CAAC,0BAA0B,GAAGD,KAAK,CAACE,OAAO,CAAC;EAC/D;AACJ,CAAC;;AAED;AACA,OAAO,MAAMS,aAAa,GAAG,MAAAA,CAAOP,SAAS,EAAEK,WAAW,KAAK;EAC3D,IAAI;IACA,MAAMZ,QAAQ,GAAG,MAAMH,KAAK,CAACkB,GAAG,CAAC,GAAGjB,OAAO,IAAIS,SAAS,EAAE,EAAEK,WAAW,CAAC;IACxE,OAAOZ,QAAQ,CAACE,IAAI;EACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZ,MAAM,IAAIC,KAAK,CAAC,0BAA0B,GAAGD,KAAK,CAACE,OAAO,CAAC;EAC/D;AACJ,CAAC;;AAED;AACA,OAAO,MAAMW,aAAa,GAAG,MAAOT,SAAS,IAAK;EAC9C,IAAI;IACA,MAAMP,QAAQ,GAAG,MAAMH,KAAK,CAACoB,MAAM,CAAC,GAAGnB,OAAO,IAAIS,SAAS,EAAE,CAAC;IAC9D,OAAOP,QAAQ,CAACE,IAAI;EACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZ,MAAM,IAAIC,KAAK,CAAC,0BAA0B,GAAGD,KAAK,CAACE,OAAO,CAAC;EAC/D;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}